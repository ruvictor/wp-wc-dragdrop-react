{"version":3,"sources":["components/initial-data.js","components/product.jsx","components/column.jsx","components/Main.js","App.js","reportWebVitals.js","index.js"],"names":["initialData","consumer_key","consumer_secret","isLoaded","products","totalPrice","productsColumn","id","title","productIds","days","daysOrder","Container","styled","div","Product","draggableId","this","props","product","index","provided","draggableProps","dragHandleProps","ref","innerRef","src","content","alt","style","price","Component","Title","h3","ProductList","Column","day","droppableId","droppableProps","map","placeholder","BodyBlock","MainTitle","WeekDaysContainer","WeekDaysBlock","OrderInfo","ProductsBlock","PlaceOrder","Main","state","onDragEnd","result","destination","source","start","finish","startProductIds","Array","from","splice","newStart","finishProductIds","newFinish","newpIDs","prodRemove","remIndex","indexOf","currentItemPrice","newState","parseInt","setState","fetch","then","res","json","mainResult","APIIds","grouped_products","productID","images","newProds","Object","keys","length","JSON","stringify","String","error","dayId","productId","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8816db91.chunk.js","sourcesContent":["const initialData = {\n    consumer_key: 'ck_d8d533b58c08de9ad21cc73ea9cca871ef8857a7',\n    consumer_secret: 'cs_6a0bff1dbf6841f218651d8a3c9faa73a2f831ea',\n    isLoaded: false,\n    products: {\n    },\n    totalPrice: 0,\n    productsColumn: {\n        products:{\n            id: 'products',\n            title: 'Products',\n            productIds: []\n            // productIds: ['17', '15', '24', '25', '26', '27', '28']\n            // productIds: ['product-1', 'product-2', 'product-3', 'product-4', 'product-5', 'product-6', 'product-7']\n        }\n    },\n    days: {\n        'monday': {\n            id: 'monday',\n            title: 'Monday',\n            productIds: [],\n        },\n        'tuesday': {\n            id: 'tuesday',\n            title: 'Tuesday',\n            productIds: [],\n        },\n        'wednesday': {\n            id: 'wednesday',\n            title: 'Wednesday',\n            productIds: [],\n        },\n        'thursday': {\n            id: 'thursday',\n            title: 'Thursday',\n            productIds: [],\n        },\n        'friday': {\n            id: 'friday',\n            title: 'Friday',\n            productIds: [],\n        },\n        'saturday': {\n            id: 'saturday',\n            title: 'Saturday',\n            productIds: [],\n        },\n        'sunday': {\n            id: 'sunday',\n            title: 'Sunday',\n            productIds: [],\n        },\n    },\n    daysOrder: ['monday','tuesday','wednesday','thursday','friday','saturday','sunday']\n}\n\nexport default initialData;","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport { Draggable } from 'react-beautiful-dnd';\n\nconst Container = styled.div`\n    border: 1px solid lightgrey;\n    padding: 8px;\n    margin-bottom: 8px;\n    border-radius: 2px;\n    background-color: #fff;\n    float: left;\n    box-sizing: border-box;\n    text-align: center;\n    font-size: 15px;\n`;\n\n\nexport default class Product extends Component {\n    render(){\n        return (\n            <Draggable draggableId={this.props.product.id} index={this.props.index}>\n                {(provided) => (\n                    <Container\n                        {...provided.draggableProps}\n                        {...provided.dragHandleProps}\n                        ref={provided.innerRef}\n                    >\n                        <img src={this.props.product.content} alt=\"menu\" style={{'width': '100px','height': '100px'}} /><br />\n                        ${this.props.product.price}\n                    </Container>\n                )}\n            </Draggable>\n        );\n    }\n}","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport { Droppable } from 'react-beautiful-dnd';\nimport Product from './product';\n\nconst Container = styled.div`\n    margin: 8px;\n    border-radius: 2px;\n    width: 50%;\n    min-height: 195px;\n`;\nconst Title = styled.h3`\n    text-align: center;\n`;\nconst ProductList = styled.div`\n    padding: 8px;\n`;\n\nexport default class Column extends Component {\n    render(){\n        return (\n            <Container>\n                <Title>{this.props.day.title}</Title>\n                <Droppable droppableId={this.props.day.id}>\n                    {(provided) => (\n                        <ProductList\n                            ref={provided.innerRef}\n                            {...provided.droppableProps}\n                        >\n                            {this.props.products.map((product, index) => (\n                                <Product key={product.id} product={product} index={index} />\n                            ))}\n                            {provided.placeholder}\n                        </ProductList>\n                    )}\n                </Droppable>\n            </Container>\n        );\n    }\n}","import React, { Component } from 'react';\nimport '@atlaskit/css-reset';\nimport styled from 'styled-components';\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\nimport initialData from './initial-data';\nimport Column from './column';\nimport Product from './product';\n\nconst BodyBlock = styled.div`\n    background-color: #F4F4F4;\n    margin: 0;\n    paddding: 0;\n    width: 100%;\n    height: 100vh;\n    display: table;\n`;\nconst MainTitle = styled.h3`\n    text-align: center;\n    padding: 20px 0;\n    font-size: 25px;\n    border-bottom: 1px solid #ddd;\n    text-transform: uppercase;\n    margin: 0 0 10px;\n`;\nconst WeekDaysContainer = styled.div`\n    display: table;\n    margin: 20px auto 0;\n    width: 100%;\n    max-width: 1070px;\n    background-color: #fff;\n    border-radius: 5px;\n    box-shadow: 0 0 10px 0 rgba(0,0,0,0.15);\n    -moz-box-shadow: 0 0 10px 0 rgba(0,0,0,0.15);\n    -webkit-box-shadow: 0 0 10px 0 rgba(0,0,0,0.15);\n`;\nconst WeekDaysBlock = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n`;\nconst OrderInfo = styled.div`\n    border-top: 1px solid #ddd;\n    padding: 10px;\n    font-weight: bold;\n    font-size: 16px;\n    text-align: right;\n`;\nconst ProductsBlock = styled.div`\n    display: table;\n    margin: 35px auto 0;\n    border-radius: 5px;\n    min-width: 842px;\n    background-color: #FFF;\n    box-shadow: 0 0 10px 0 rgba(0,0,0,0.15);\n    -moz-box-shadow: 0 0 10px 0 rgba(0,0,0,0.15);\n    -webkit-box-shadow: 0 0 10px 0 rgba(0,0,0,0.15);\n`;\nconst Title = styled.h3`\n    padding: 8px;\n`;\nconst ProductList = styled.div`\n    padding: 8px;\n`;\nconst PlaceOrder = styled.div`\n    display: table;\n    margin: 30px auto 0;\n    padding: 10px;\n    width: 100%;\n    max-width: 350px;\n    color: #fff;\n    background-color: #476B2D;\n    text-align: center;\n    text-transform: uppercase;\n    font-size: 17px;\n    border-radius: 5px;\n    box-shadow: 0 0 10px 0 rgba(0,0,0,0.15);\n    -moz-box-shadow: 0 0 10px 0 rgba(0,0,0,0.15);\n    -webkit-box-shadow: 0 0 10px 0 rgba(0,0,0,0.15);\n`;\n\nexport default class Main extends Component {\n    state = initialData;\n\n\n    componentDidMount() {\n\n        fetch(\"https://localhost/wp-json/wc/v2/products/11?consumer_key=\"+ this.state.consumer_key +\"&consumer_secret=\" + this.state.consumer_secret)\n            .then(res => res.json())\n                .then(\n                    (mainResult) => {\n                        var APIIds = mainResult.grouped_products;\n                        \n                        APIIds.map((productID) => {\n                            return fetch(\"https://localhost/wp-json/wc/v2/products/\"+ productID +\"?consumer_key=\"+ this.state.consumer_key +\"&consumer_secret=\" + this.state.consumer_secret)\n                                .then(res => res.json())\n                                    .then(\n                                        (result) => {\n                                            const id = result.id;\n                                            const content = result.images[0].src;\n                                            const price = result.price;\n\n                                            // updating the state\n                                            const newProds = {\n                                                ...this.state,\n                                                isLoaded: Object.keys(this.state.products).length === APIIds.length - 1 ? true : false,\n                                                products: {\n                                                    ...this.state.products,\n                                                    [id]:{\n                                                        ...this.state.products[id],\n                                                        id: JSON.stringify(id),\n                                                        content: content,\n                                                        price: price\n                                                    }\n                                                },\n                                                productsColumn: {\n                                                    ...this.state.productsColumn,\n                                                    products: {\n                                                        ...this.state.productsColumn.products,\n                                                        productIds: mainResult.grouped_products.map(String)\n                                                    }\n                                                }\n                                            };\n                                            this.setState(newProds);\n                                        },\n                                        (error) => {\n                                            this.setState({\n                                                isLoaded: false,\n                                                error\n                                            });\n                                        }\n                                    );\n                            \n                        });\n\n                    },\n                    (error) => {\n                        this.setState({\n                            isLoaded: false,\n                            error\n                        });\n                    }\n                )\n        \n    \n}\n\n    onDragEnd = result => {\n        \n        const { destination, source, draggableId } = result;\n        // console.log(destination);\n        if(!destination || destination.droppableId === 'products'){\n            return;\n        }\n\n        if(\n            destination.droppableId === source.droppableId &&\n            destination.index === source.index\n        ) {\n            return;\n        }\n\n        const start = source.droppableId === 'products' ?\n                this.state.productsColumn[source.droppableId] : \n                this.state.days[source.droppableId];\n        const finish = this.state.days[destination.droppableId];\n        \n        // moving from one list to another\n        const startProductIds = Array.from(\n            source.droppableId === 'products' ? \n            start.productIds : start.productIds);\n        \n            startProductIds.splice(source.index, 1);\n        const newStart = {\n            ...start,\n            productIds: startProductIds,\n        };        \n\n        const finishProductIds = Array.from(finish.productIds);\n\n        finishProductIds.splice(destination.index, 0, draggableId);\n        const newFinish = {\n            ...finish,\n            productIds: finishProductIds,\n        };\n\n        // removing the item from products state\n        if(source.droppableId === 'products'){\n            const newpIDs = this.state.productsColumn.products.productIds;\n            const prodRemove = draggableId;\n            const remIndex = newpIDs.indexOf(prodRemove);\n            newpIDs.splice(remIndex, 1);\n        }\n        \n        // updating total price\n        const currentItemPrice = \n        source.droppableId === 'products' ? \n        this.state.products[draggableId].price : 0;\n\n        const newState = {\n            ...this.state,\n            totalPrice: parseInt(currentItemPrice) + parseInt(this.state.totalPrice),\n            days: {\n                ...this.state.days,\n                [newStart.id]: newStart,\n                [newFinish.id]: newFinish\n            },\n            productsColumn: {\n                ...this.state.productsColumn,\n            }\n        };\n        this.setState(newState);\n    }\n\n    render(){\n        \n        let totalPrice = this.state.totalPrice;\n        return (\n            <>\n            {this.state.isLoaded ? \n            (<BodyBlock>\n                <DragDropContext onDragEnd={this.onDragEnd}>\n                    <WeekDaysContainer>\n                        <MainTitle>Personalize Your Order</MainTitle>\n                        <WeekDaysBlock>\n                            {this.state.daysOrder.map((dayId) => {\n                                const day = this.state.days[dayId];\n                                const products = day.productIds.map(productId => this.state.products[productId]);\n                                \n                                return <Column key={day.id} day={day} products={products} />;\n                            })}\n                        </WeekDaysBlock>\n                        <OrderInfo>\n                        <p>Total: ${totalPrice}</p>\n                        </OrderInfo>\n                    </WeekDaysContainer>\n            \n                    {this.state.productsColumn.products.productIds.length !== 0 ? \n                        (<ProductsBlock>\n                            <Title>{this.state.productsColumn.products.title}</Title>\n                            <Droppable droppableId={this.state.productsColumn.products.id}>\n                                {(provided) => (\n                                    <ProductList\n                                        ref={provided.innerRef}\n                                        {...provided.droppableProps}\n                                    >\n                                        {this.state.productsColumn.products.productIds.map((product, index) => \n                                            <Product key={product} product={this.state.products[product]} index={index} />\n                                        )}\n                                        {provided.placeholder}\n                                    </ProductList>\n                                )}\n                            </Droppable>\n                        </ProductsBlock>) : \n                        <PlaceOrder>Place Order</PlaceOrder>\n                    }\n                </DragDropContext>\n            </BodyBlock>) : ''}\n            </>\n        )\n    }\n}","import Main from './components/Main';\n\nfunction App() {\n  return (\n    <Main />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}